@page "/client-card/{AccountId:int}"
@rendermode InteractiveServer

@using ClearKilovat.Models.Entity
@using Microsoft.EntityFrameworkCore
@using Radzen
@using Radzen.Blazor
@using ClearKilovat.DB

@inject PostgreDBContext DbContext

<RadzenStack Orientation="Orientation.Vertical" Style="width:100%; margin:0; padding:0;">
    <RadzenCard Style="width:100%; margin:0; padding:20px; background-color:#f3f8f3; border-radius:0 0 45px 45px">
        <h3 class="text-center" style="color:green; font-size:30px;">Карточка абонента</h3>
        <div style="height:2px; background:green; width:280px; margin:0 auto 20px;"></div>
        <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.SpaceBetween" Style="padding:10px">
            <RadzenStack Orientation="Orientation.Vertical">
                <RadzenStack Orientation="Orientation.Horizontal">
                    <RadzenLabel Text="Account ID:" Style="font-size:20px;" />
                    <RadzenLabel Text=@(account.Id.ToString()) Style="font-size:20px; " />
                </RadzenStack>
                <RadzenStack Orientation="Orientation.Horizontal">
                    <RadzenLabel Text="Адрес:" Style="font-size:20px;" />
                    <RadzenLabel Text=@(account.Address) Style="font-size:20px; " />
                </RadzenStack>
                <RadzenStack Orientation="Orientation.Horizontal">
                    <RadzenLabel Text="Коммерческий:" Style="font-size:20px; " />
                    <RadzenLabel Text=@(account.IsCommercial ? "Да" : "Нет") Style="font-size:20px; " />
                </RadzenStack>
                <RadzenStack Orientation="Orientation.Horizontal">
                    <RadzenLabel Text="Тип здания:" Style="font-size:20px;" />
                    <RadzenLabel Text=@(account.BuildingType ?? "—") Style="font-size:20px; " />
                </RadzenStack>
                <RadzenStack Orientation="Orientation.Horizontal">
                <RadzenLabel Text="Кол-во комнат:" Style="font-size:20px; " />
                <RadzenLabel Text=@(account.RoomsCount?.ToString() ?? "—") Style="font-size:20px; " />
                </RadzenStack>
                <RadzenStack Orientation="Orientation.Horizontal">
                    <RadzenLabel Text="Кол-во жильцов:" Style="font-size:20px;" />
                    <RadzenLabel Text=@(account.ResidentsCount?.ToString() ?? "—") Style="font-size:20px; " />
                </RadzenStack>

                <RadzenButton Icon="download" ButtonStyle="ButtonStyle.Primary" Style="width:80px ;height:80px; margin-top:auto;border-radius:100% ;background-color:#ADEBA5; align-content:end"  />
                
            </RadzenStack>

            <RadzenDataGrid @ref="myGrid"
                            Data="@_consumptions"
                            TItem="Consumption"
                            Class="modern-grid"
                            Style="flex:1; width:100%;"
                            PageSize="12"
                            ShowPagingSummary="false"
                            ShowPaging="false">
                <Columns>
                    <RadzenDataGridColumn TItem="Consumption" Property="Month" Title="Месяц" />
                    <RadzenDataGridColumn TItem="Consumption" Property="Value" Title="Киловатт" />
                </Columns>
            </RadzenDataGrid>
        </RadzenStack>
    </RadzenCard>
</RadzenStack>
<style>
    .rz-button-md .rzi {
        font-size: 50px;
        height: 50px;
        line-height: 50px;
        width: 50px;
    }
</style>

@code {
    [Parameter]
    public int AccountId { get; set; }

    RadzenDataGrid<Consumption> myGrid;
    Account account = new();
    List<Consumption> _consumptions = new();

    protected override async Task OnInitializedAsync()
    {
        // Теперь DbContext не null
        account = await DbContext.Accounts
                                 .Include(a => a.Consumptions)
                                 .FirstOrDefaultAsync(a => a.Id == AccountId)
                  ?? new Account();

        _consumptions = account.Consumptions
                               .OrderByDescending(c => c.Month)
                               .ToList();
    }
}
