@page "/"
@using ClearKilovat.Models.Entity
@using Interfaces
@using Models.DTO
@using Radzen
@using Radzen.Blazor
@rendermode InteractiveServer
@inject IDbService dbService

<RadzenDataGrid Data="@_accounts" TItem="Account"
                AllowFiltering="true"
                PageSize="10"
                AllowPaging="true"
                FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive">
    <Columns>
        <RadzenDataGridColumn TItem="Account" Property="Address" Title="Адрес" Filterable="true" />

        <RadzenDataGridColumn TItem="Account" Property="IsCommercial" Title="Тип объекта" Filterable="true">
            <Template Context="account">
                @if (account.IsCommercial)
                {
                    <span>Коммерческий</span>
                }
                else
                {
                    <span>Не коммерческий</span>
                }
            </Template>
        </RadzenDataGridColumn>

        <RadzenDataGridColumn TItem="Account" Property="@nameof(Account.ParserAnalytics.DescriptionReason)" Title="Описание от Парсера" Filterable="true" />
        <RadzenDataGridColumn TItem="Account" Property="@nameof(Account.ParserAnalytics.ParsedAt)" Title="Результат от Парсера" Filterable="true">
            <Template Context="account">
                @if (account.NnResult != null && account.NnResult.IsViolator)
                {
                    <span>Есть угроза</span>
                }
                else
                {
                    <span>Нет угрозы</span>
                }
            </Template>
        </RadzenDataGridColumn>

        <RadzenDataGridColumn TItem="Account" Property="@nameof(Account.NnResult.DescriptionReason.Length)" Title="Описание от нейросети" Filterable="true" />
        <RadzenDataGridColumn TItem="Account" Property="@nameof(Account.NnResult.IsViolator)" Title="Результат от нейросети" Filterable="true">
            <Template Context="account">
                @if (account.NnResult != null && account.NnResult.IsViolator)
                {
                    <span>Есть угроза</span>
                }
                else{
                    <span>Нет угрозы</span>
                }
            </Template>
        </RadzenDataGridColumn>

    </Columns>
</RadzenDataGrid>



@code {
    private List<AnalyzedAccountsDTO> accountsDTOs = [];
    private List<Account> _accounts = [];

    protected override void OnInitialized()
    {
        _accounts = dbService.GetAccounts();
        base.OnInitialized();
    }
}